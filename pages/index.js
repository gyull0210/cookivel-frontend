import Head from 'next/head'
import Image from 'next/image'
import Link from 'next/link'
import tw from 'twin.macro'
import { useEffect, useRef, useState } from 'react'
import { HiBars3, HiMagnifyingGlass, HiOutlineBell, HiChevronRight } from 'react-icons/hi2'
import Button from '../components/core/button/Button'
import Avatar from '../components/core/avatar/Avatar'
import MainCarousel from '../components/overlay/mainCarousel/MainCarousel'
import useDetectClose from '../components/hooks/useDetectClose'
import Sidebar from '../components/layout/sidebar/sidebar'
import { Menu, Popover } from '@headlessui/react'
import { faker } from '@faker-js/faker/locale/ko'

export default function Home() {

  const [myPageIsOpen, myPageRef, myPageHandler] = useDetectClose(false);
  const [sidebarIsOpen, sidebarRef, sidebarHandler] = useDetectClose(false);

  const [images, setImages] = useState([]);
  const [ranks, setRanks] = useState([]);
  const [news, setNews] = useState([]);

  faker.seed(42);

  const image = faker.image.urlLoremFlickr({ width: 560, height:320 });

  const data = [
    {src: image},{src: image},{src: image},{src: image},{src: image},{src: image},{src: image},{src: image},{src: image}
  ]
  
  const book = faker.image.urlPlaceholder({width: 100, height: 125, format: "Webp", backGroundColor: faker.color.human(), textColor: "FFFFFF", text:"book"});

  const newData = faker.lorem.paragraph(1);

  useEffect(() => {
    setRanks(Array(6).fill(book))
  },[])

  useEffect(() => {
    setNews(Array(10).fill(newData))
  },[])

  useEffect(() => {
    setImages(Array(6).fill(image))
    console.log(images);
  },[image])

  const genre = ["판타지", "무협", "현대판타지", "로맨스판타지", "BL", "GL"];
  return (
    <>
      <Head>
        <title>쿠키블</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <header tw="w-full h-16 border-b border-gray-200">
        <nav tw="relative flex justify-between items-center max-w-screen-lg mx-auto px-4 py-2">
          <div tw="lg:hidden">
            <button
              ref={sidebarRef}
              type="button"
              tw="p-3 hover:bg-gray-50 active:bg-gray-100 rounded-full"
              onClick={sidebarHandler}
            >
              <HiBars3 tw="w-6 h-6 text-gray-400"/>
            </button>
          </div>
          <div tw="flex justify-between items-center space-x-4">
            <Link tw="inline-flex font-jua" href="/">
              <span tw="text-2xl font-bold">C</span>
              <span tw="text-2xl font-bold text-[#E7CE96]">OO</span>
              <span tw="text-2xl font-bold">KVEL</span>
            </Link>

            <div tw="relative hidden lg:flex items-center space-x-4 text-lg">
              <Link tw="relative px-4 py-2 font-semibold hover:text-[#E7CE96]" href="/book">자유연재</Link>
              <Link tw="relative px-4 py-2 font-semibold hover:text-[#E7CE96]" href="/review/forum">리뷰</Link>
              <Link tw="relative px-4 py-2 font-semibold hover:text-[#E7CE96]" href="/bookshelf">내 서재</Link>
            </div>
          </div>

          <div tw="flex justify-between items-center">
            <button
              type="button"
              tw="p-3 hover:bg-gray-50 active:bg-gray-100 rounded-full"
              onClick={()=>router.push("/search")}
            >
              <HiMagnifyingGlass tw="w-6 h-6 text-gray-400"/>
            </button>
            <Popover tw="relative">
              <Popover.Button tw="hidden lg:block p-3 hover:bg-gray-50 active:bg-gray-100 rounded-full">
                <HiOutlineBell tw="w-6 h-6 text-gray-400"/>
              </Popover.Button>
              <Popover.Panel tw="absolute z-10 w-72 h-96 mt-4 flex flex-col shadow rounded-lg duration-200 bg-white overflow-hidden right-0">
                <div tw="flex flex-col h-full">
                  <div tw="border-b py-2 px-6">알림</div>
                  <div tw="">
                    <div tw="border-b py-2 px-6">메세지</div>
                    <div tw="border-b py-2 px-6">메세지</div>
                    <div tw="border-b py-2 px-6">메세지</div>
                  </div>           
                </div>
              </Popover.Panel>
            </Popover>
            <Menu as="div" tw="relative inline-block text-left">
              <div tw="relative">
              <Menu.Button tw="hidden md:flex items-center ml-3" type="button" ref={myPageRef} onClick={myPageHandler}>
                <Avatar size="sm" alt="avatar" src={faker.image.avatar()} width={32} height={32}/>
              </Menu.Button>
              <Menu.Items tw="absolute w-56 mt-4 z-10 flex flex-col shadow rounded-lg duration-200 bg-white overflow-hidden right-0">
                <Menu.Item>
                  {({ active }) => (
                    <a
                      tw="px-4 py-2"
                      css={active && tw`bg-gray-200`}
                      href="/notification"
                    >
                    알림
                    </a>
                  )}
                </Menu.Item>
                <Menu.Item>
                  {({ active }) => (
                    <Link
                      tw="px-4 py-2"
                      css={active && tw`bg-gray-200`}
                      href="/storyroom"
                    >
                    스토리룸
                    </Link>
                  )}
                </Menu.Item>
                <Menu.Item>
                  {({ active }) => (
                    <Link
                      tw="px-4 py-2"
                      css={active && tw`bg-gray-200`}
                      href="/notice"
                    >
                    공지사항
                    </Link>
                  )}
                </Menu.Item>
                <Menu.Item>
                  {({ active }) => (
                    <Link
                      tw="px-4 py-2"
                      css={active && tw`bg-gray-200`}
                      href="/logout"
                    >
                    로그아웃
                    </Link>
                  )}
                </Menu.Item>       
              </Menu.Items>
              </div>
            </Menu>
          </div>
        </nav>
      </header>
      <div tw="lg:hidden border-b border-gray-200">
        <nav tw="relative flex justify-between items-center text-center max-w-screen-lg mx-auto">
          <Link tw="py-3 w-full font-semibold active:bg-gray-100" href="/book">자유연재</Link>
          <Link tw="py-3 w-full font-semibold" href="/review">리뷰</Link>
          <Link tw="py-3 w-full font-semibold" href="/bookshelf">내 서재</Link>
        </nav>
      </div>   
      <Sidebar isOpen={sidebarIsOpen} onClick={sidebarHandler}/>
      <main tw="flex flex-col overflow-x-hidden">
        <MainCarousel slides={data}/>             
        <section tw="flex justify-center w-full max-w-screen-lg mx-auto mt-12">
          <div tw="w-1/2 lg:(flex w-full) flex-1 flex-wrap gap-6">
            {
              genre.map((genre, i) => (
                <div tw="w-full flex-1 bg-gray-100 p-4 text-center rounded-lg" key={i}>
                  <Link href="/">
                    {genre}
                  </Link>                 
                </div>
              ))
            }
          </div>
        </section>
        <section tw="w-full max-w-screen-lg mx-auto">
          <div tw="w-full flex">
            <div tw="w-full flex justify-between items-center border-b border-gray-200 px-4 py-2">
              <h2 tw="text-xl font-bold">신규 작품</h2>
              <HiChevronRight tw="w-6 h-6" />
            </div>
          </div>
          <div tw="w-full flex flex-grow justify-between gap-6 py-2 overflow-x-scroll scrollbar-hide">
            {
              ranks.map((rank, l) => (
                <div tw="w-[100px] flex flex-col" key={l}>
                  <div tw="w-[100px] h-[125px] rounded-lg overflow-hidden">
                    <img tw="w-full h-full" src={rank} alt={`표지${l}`}/>
                  </div>       
                  <div tw="text-base truncate w-full">{faker.lorem.lines(1)}</div>
                </div>
              ))
            }
          </div>
        </section>
        <section tw="w-full max-w-screen-lg mx-auto mt-12">
          <div tw="w-full flex">
            <div tw="w-full flex justify-between items-center border-b border-gray-200 px-4 py-2">
              <h2 tw="text-xl font-bold">인기 작품</h2>
              <HiChevronRight tw="w-6 h-6" />
            </div>
          </div>
          <div tw="w-full flex flex-col lg:flex-row gap-6  overflow-x-scroll scrollbar-hide">
          <div tw="flex flex-wrap ">
            {
              ranks.map((rank, i) => (
                <div tw="w-1/2 flex gap-6 py-2" key={i}>
                  <div tw="flex">
                    <div tw="font-bold">{i+1}</div>
                    <div tw="w-[100px] h-[125px] rounded-lg overflow-hidden">
                      <img tw="w-full h-full" src={rank} alt={`표지${i}`}/>
                    </div>
                  </div>
                  <div tw="text-base truncate w-full">{faker.lorem.lines(1)}</div>
                </div>
              ))
            }
          </div>
          </div>
        </section>
        <section tw="w-full max-w-screen-lg mx-auto">
          <div tw="w-full flex">
            <div tw="w-full flex justify-between items-center border-b border-gray-200 px-4 py-2">
              <h2 tw="text-xl font-bold">인기 리뷰</h2>
              <HiChevronRight tw="w-6 h-6" />
            </div>
          </div>
          <div tw="flex flex-col  overflow-x-scroll scrollbar-hide">
            {
              news.map((news, k) => (
                <div tw="flex items-center px-4 py-4 border-b" key={k}>
                  <div tw="font-bold">{k+1}</div>
                  <div tw="text-base">{faker.lorem.sentences(1)}</div>
                </div>
              ))
            }
          </div>
        </section>       
      </main>
      <footer tw="w-full h-20">
        
      </footer>
      
    </>
  )
}

